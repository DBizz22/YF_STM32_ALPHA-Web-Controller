#ifndef WEBPAGES_H_
#define WEBPAGES_H_

const char LOGIN[] =
    "<!DOCTYPE html>\n"
    "<html lang=\"en\">\n"
    "    <head>\n"
    "        <meta charset=\"UTF-8\">\n"
    "        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n"
    "        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">  \n"
    "        <link rel=\"stylesheet\" href=\"https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css\">\n"
    "        <style>\n"
    "            *\n"
    "            {\n"
    "                margin: 0;\n"
    "                padding: 0;\n"
    "                box-sizing: border-box;\n"
    "                font-family: 'Poppins', sans-serif;\n"
    "            }\n"
    "            body\n"
    "            {\n"
    "                background: black;\n"
    "                background-size: cover;\n"
    "                background-position: center;\n"
    "                background-repeat: no-repeat;\n"
    "                height: 100vh;\n"
    "                display: flex;\n"
    "                justify-content: center;\n"
    "                align-items: center;\n"
    "            }\n"
    "            .wrapper \n"
    "            {\n"
    "                background: yellow;\n"
    "                color: black;\n"
    "                width: 420px;\n"
    "                border-radius: 40px;\n"
    "                padding: 30px 40px;\n"
    "            }\n"
    "            .wrapper h1\n"
    "            {\n"
    "                font-size: 36px;\n"
    "                text-align: center;\n"
    "\n"
    "            }\n"
    "            .wrapper .input-box\n"
    "            {\n"
    "                position: relative;\n"
    "                width: 100%;\n"
    "                height: 50px;\n"
    "                margin: 30px 0;\n"
    "            }\n"
    "            .wrapper input\n"
    "            {\n"
    "                width: 100%;\n"
    "                height: 100%;\n"
    "                background: transparent;\n"
    "                border: none;\n"
    "                outline: none;\n"
    "                border: 2px solid black;\n"
    "                border-radius: 50px;\n"
    "                font-size: 16px;\n"
    "                color: black;\n"
    "                padding: 20px 45px 20px 20px;\n"
    "            }\n"
    "            .wrapper input::placeholder\n"
    "            {\n"
    "                color: black;\n"
    "            }\n"
    "            .wrapper #btn\n"
    "            {\n"
    "                width: 100%;\n"
    "                height: 45px;\n"
    "                background-color: black;\n"
    "                border: none;\n"
    "                outline: none;\n"
    "                border-radius: 50px;\n"
    "                box-shadow: 0 0 10px rgba(0 0 0 .1);\n"
    "                cursor: pointer;\n"
    "                font-size: 16px;\n"
    "                color: white;\n"
    "                font-weight: 600;\n"
    "            }\n"
    "            .input-box i\n"
    "            {\n"
    "                position: absolute;\n"
    "                top: 50%;\n"
    "                right: 20px;\n"
    "                transform: translateY(-50%);\n"
    "                font-size: 20px;\n"
    "            }\n"
    "            .btn:hover\n"
    "            {\n"
    "                box-shadow: 5px 5px 10px rgba(0,0,0,0.5);\n"
    "            }\n"
    "        </style>\n"
    "        <title>YF_STM32_ALPHA</title>\n"
    "    </head>\n"
    "    <body>\n"
    "        <div class=\"wrapper\">\n"
    "            <form action=\"STM32F1\" target=\"_self\" method=\"GET\">\n"
    "                <h1>Login</h1>\n"
    "                <div class=\"input-box\">\n"
    "                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter Username\" "
    "required>\n"
    "                    <i class='bx bxs-user'></i>\n"
    "                </div>\n"
    "                <div class=\"input-box\">\n"
    "                    <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter Password\" "
    "required>\n"
    "                    <i class='bx bxs-lock-alt'></i>\n"
    "                </div>\n"
    "                <button type=\"submit\" title=\"Sign-in\" id=\"btn\" onclick=\"setColor(id)\">Login</button>\n"
    "            </form>\n"
    "        </div>\n"
    "        <script>\n"
    "            function setColor(id)\n"
    "            {\n"
    "                var button_txt=document.getElementById(id)\n"
    "                button_txt.innerHTML=\"Submitted\"\n"
    "                setTimeout(function(){button_txt.innerHTML=\"Login\";},2000);\n"
    "            }\n"
    "\n"
    "            const callback=(err,data)=>\n"
    "            {\n"
    "                if(err)\n"
    "                {\n"
    "                    console.log(err);\n"
    "                    alert(\"No response from server\");\n"
    "                }\n"
    "                else if(data==\"wrong\")\n"
    "                {\n"
    "                    console.log(data);\n"
    "                    alert(\"Username or password incorrect. Please try again.\");\n"
    "                }\n"
    "                else if(data==\"ok\")\n"
    "                {\n"
    "                    console.log(data);\n"
    "                    setTimeout(function(){location.reload();},2000);\n"
    "                }\n"
    "            }\n"
    "\n"
    "            const form = document.querySelector('form');\n"
    "            form.addEventListener('submit', function(event) {\n"
    "                event.preventDefault(); // prevent default form submission behavior\n"
    "    \n"
    "                // validate username and password\n"
    "                const username = document.getElementById('username').value;\n"
    "                const password = document.getElementById('password').value;\n"
    "                request(\"STM32F1?\"+\"username=\"+username+\"&password=\"+password);\n"
    "            })\n"
    "\n"
    "            const request=(requestID)=>\n"
    "            {\n"
    "                const xhttp=new XMLHttpRequest();\n"
    "                xhttp.open(\"GET\",requestID);\n"
    "                xhttp.send();\n"
    "                xhttp.onreadystatechange = function()\n"
    "                {\n"
    "                    if(this.readyState===4 && this.status===200)\n"
    "                    {\n"
    "                        data=this.responseText.toString();\n"
    "                        callback(null,data);\n"
    "                    }\n"
    "                    else if(this.readyState===4)\n"
    "                    {\n"
    "                        callback(requestID+\" : No response.\",undefined);\n"
    "                    }                   \n"
    "                }\n"
    "            }\n"
    "\n"
    "        </script>\n"
    "    </body>\n"
    "</html>";

const char CONTROL_WEBPAGE[] =
    "<!DOCTYPE html>\n"
    "<html>\n"
    "\n"
    "<head>\n"
    "    <meta charset=\"UTF-8\">\n"
    "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n"
    "    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n"
    "    <title>YF_STM32_ALPHA</title>\n"
    "    <style>\n"
    "        * {\n"
    "            margin: 0;\n"
    "            padding: 0;\n"
    "            box-sizing: border-box;\n"
    "            font-family: 'Poppins', sans-serif;\n"
    "            font-size: 20px;\n"
    "        }\n"
    "\n"
    "        body {\n"
    "            background-image: "
    "url(https://img.freepik.com/free-vector/"
    "gradient-mint-background_23-2150284417.jpg?w=1480&t=st=1718453242~exp=1718453842~hmac="
    "b911c395a3f8340c68c23cf76aa7f4a9dbdb6005cbe4fbafb2df286f603acd38);\n"
    "            background-repeat: no-repeat;\n"
    "            background-size: cover;\n"
    "        }\n"
    "\n"
    "        .grid {\n"
    "            display: grid;\n"
    "            grid-template-columns: 1fr 1fr 1fr;\n"
    "            gap: 20px 20px;\n"
    "        }\n"
    "\n"
    "        h1 {\n"
    "            font-size: 40px;\n"
    "            text-align: center;\n"
    "        }\n"
    "\n"
    "        h2 {\n"
    "            font-size: 30px;\n"
    "            font-weight: bolder;\n"
    "        }\n"
    "\n"
    "        #timer-display {\n"
    "            background-image: "
    "url(https://wallpapers.com/images/hd/polygons-abstract-background-mhdoyguhq3skloxt.jpg);\n"
    "            background-color: red;\n"
    "            border-radius: 20px;\n"
    "            text-align: center;\n"
    "            font-size: 20px;\n"
    "            font-weight: bold;\n"
    "        }\n"
    "\n"
    "        #lcd-display {\n"
    "            background-image: "
    "url(https://coolbackgrounds.io/images/backgrounds/blue/blue-trianglify-8e4a0501.jpg);\n"
    "            border-style: solid;\n"
    "            border-width: 4px;\n"
    "            text-align: center;\n"
    "        }\n"
    "\n"
    "        #lcd-text {\n"
    "            border-radius: 10px;\n"
    "            border-style: solid;\n"
    "            border-width: 2px;\n"
    "            border-color: black;\n"
    "            font-weight: bold;\n"
    "            font-size: 20px;\n"
    "            border-style: solid;\n"
    "        }\n"
    "\n"
    "        #led-display,\n"
    "        #light-display,\n"
    "        #buzzer {\n"
    "            margin-left: 10px;\n"
    "            text-align: center;\n"
    "        }\n"
    "\n"
    "        #buzzer {\n"
    "            background-image: none;\n"
    "            padding-top: 50px;\n"
    "            height: 350px;\n"
    "        }\n"
    "\n"
    "        button {\n"
    "            color: yellow;\n"
    "            background-color: black;\n"
    "            border-radius: 10px;\n"
    "            font-size: 20px;\n"
    "            font-weight: 500;\n"
    "            margin-left: 10px;\n"
    "            padding: 5px;\n"
    "            box-shadow: 0 0 10px rgba(0 0 0 .1);\n"
    "            cursor: pointer;\n"
    "        }\n"
    "\n"
    "        #time_min,\n"
    "        #time_sec {\n"
    "            padding: auto;\n"
    "            background: transparent;\n"
    "            border: none;\n"
    "            font-size: 20px;\n"
    "            font-weight: bold;\n"
    "            color: black;\n"
    "            text-align: center;\n"
    "        }\n"
    "\n"
    "        #timer_layout {\n"
    "            display: grid;\n"
    "            grid-template-columns: 1fr 20px 1fr;\n"
    "            border: none;\n"
    "        }\n"
    "    </style>\n"
    "</head>\n"
    "\n"
    "<body>\n"
    "    <h1>YF_STM32_ALPHA Controller</h1><br>\n"
    "    <div class=\"grid\">\n"
    "\n"
    "        <div></div>\n"
    "        <div id=\"timer-display\" style=\"border-style: solid;\">\n"
    "            <h2 id=\"timer-mode\">Timer</h2><br>\n"
    "            <div style=\"display: grid; grid-template-columns: 1fr 1fr;\">\n"
    "                <p style=\"padding-right: 30px\">MIN</p>\n"
    "                <p>SEC</p>\n"
    "            </div>\n"
    "            <div id=\"timer_layout\">\n"
    "                <input type=\"number\" id=\"time_min\" style=\"font-size: 40px\" min=\"0\" max=\"60\" "
    "placeholder=\"00\"></input>\n"
    "                <p style=\"font-size: 50px;\" style=\"font-weight:bolder;\"> : </p>\n"
    "                <input type=\"number\" id=\"time_sec\" style=\"font-size: 40px\" min=\"0\" max=\"59\"\n"
    "                    placeholder=\"00\"></input><br>\n"
    "            </div>\n"
    "            <div>\n"
    "                <button id=\"mode-btn\" onclick=\"myfunc(id)\">Mode</button>\n"
    "                <button id=\"start-btn\" onclick=\"myfunc(id)\">Start</button>\n"
    "                <button id=\"reset-btn\" onclick=\"myfunc(id)\">Reset</button>\n"
    "            </div>\n"
    "        </div>\n"
    "        <div></div>\n"
    "\n"
    "        <div id=\"led-display\">\n"
    "            <p style=\"margin-top: 20px;\">LED 1 : <span id=\"led1-status\">OFF</span></p>\n"
    "            <button id=\"toggle1\" style=\"margin-left: 10px\" onclick=\"myfunc(id)\">Toggle</button>\n"
    "            <p style=\"margin-top: 20px;\">LED 2 : <span id=\"led2-status\">OFF</span></p>\n"
    "            <button id=\"toggle2\" style=\"margin-left: 10px\" onclick=\"myfunc(id)\">Toggle</button>\n"
    "        </div>\n"
    "        <div id=\"lcd-display\">\n"
    "            <div>\n"
    "                <h2>LCD Display</h2>\n"
    "                <textarea id=\"lcd-text\" name=\"lcd-txt\" placeholder=\"Type text...\" rows=\"7\" cols=\"25\"\n"
    "                    maxlength=\"100\"></textarea><br>\n"
    "                <button id=\"display-btn\" style=\"margin-right: 10px\" onclick=\"myfunc(id)\">Display</button>\n"
    "                <button id=\"clear-btn\" style=\"margin-left: 10px\" onclick=\"lcd_clear()\">Clear</button>\n"
    "            </div>\n"
    "        </div>\n"
    "        <div>\n"
    "            <!--ADD motor control-->\n"
    "        </div>\n"
    "        <div id=\"light-display\">\n"
    "            <div>\n"
    "                <label for=\"color1\">LIGHT 1 : </label>\n"
    "                <input type=\"color\" id=\"color1\"></input><br>\n"
    "                <button title=\"display\" id=\"light-btn1\" style=\"margin: 10px; margin-bottom: 40px;\"\n"
    "                    onclick=\"myfunc(id)\">Ok</button><br>\n"
    "                <label for=\"color2\">LIGHT 2 : </label>\n"
    "                <input type=\"color\" id=\"color2\"></input><br>\n"
    "                <button title=\"display\" id=\"light-btn2\" style=\"margin: 10px;\" "
    "onclick=\"myfunc(id)\">Ok</button><br>\n"
    "            </div>\n"
    "        </div>\n"
    "        <div id=\"buzzer\">\n"
    "            <div>\n"
    "                <p>BUZZER</p>\n"
    "                <button id=\"buzz-btn\" onclick=\"myfunc(id)\">ON</button>\n"
    "            </div>\n"
    "        </div>\n"
    "        <div></div>\n"
    "    </div>\n"
    "\n"
    "    <script>\n"
    "        let states = new Map([\n"
    "            [\"mode-btn\", false],\n"
    "            [\"start-btn\", false],\n"
    "            [\"reset-btn\", false],\n"
    "            [\"toggle1\", false],\n"
    "            [\"toggle2\", false],\n"
    "            [\"display-btn\", false],\n"
    "            [\"clear-btn\", false],\n"
    "            [\"light-btn1\", false],\n"
    "            [\"light-btn2\", false],\n"
    "            [\"buzz-btn\", false],\n"
    "        ]);\n"
    "\n"
    "        let mode_state = new Map([\n"
    "            [\"timer\", false],\n"
    "            [\"stopwatch\", false],\n"
    "        ]);\n"
    "\n"
    "        const callback = (err, data) => {\n"
    "            if (err) {\n"
    "                console.log(err);\n"
    "                return;\n"
    "            }\n"
    "            else {\n"
    "                if (data.includes(\"mode-btn=0\")) {\n"
    "                    let index = data.lastIndexOf('m');\n"
    "                    let index2 = data.lastIndexOf('s');\n"
    "                    document.getElementById(\"timer-mode\").innerHTML = \"Timer\";\n"
    "                    document.getElementById(\"time_min\").value = (data.substring(index + 1, "
    "index2)).toString();\n"
    "                    document.getElementById(\"time_sec\").value = (data.substring(index2 + 1)).toString();;\n"
    "                    states.set(\"mode-btn\", false);\n"
    "                    /*********************/\n"
    "                    if (mode_state.get(\"timer\") == true) {\n"
    "                        document.getElementById(\"start-btn\").innerHTML = \"Pause\";\n"
    "                        states.set(\"start-btn\", true);\n"
    "                    }\n"
    "                    else {\n"
    "                        document.getElementById(\"start-btn\").innerHTML = \"Start\";\n"
    "                        states.set(\"start-btn\", false);\n"
    "                    }\n"
    "                }\n"
    "                else if (data.includes(\"mode-btn=1\")) {\n"
    "                    let index = data.lastIndexOf('m');\n"
    "                    let index2 = data.lastIndexOf('s');\n"
    "                    document.getElementById(\"timer-mode\").innerHTML = \"Stopwatch\";\n"
    "                    document.getElementById(\"time_min\").value = (data.substring(index + 1, "
    "index2)).toString();\n"
    "                    document.getElementById(\"time_sec\").value = (data.substring(index2 + 1)).toString();\n"
    "                    states.set(\"mode-btn\", true);\n"
    "                    /********************************/\n"
    "                    if (mode_state.get(\"stopwatch\") == true) {\n"
    "                        document.getElementById(\"start-btn\").innerHTML = \"Pause\";\n"
    "                        states.set(\"start-btn\", true);\n"
    "                    }\n"
    "                    else {\n"
    "                        document.getElementById(\"start-btn\").innerHTML = \"Start\";\n"
    "                        states.set(\"start-btn\", false);\n"
    "                    }\n"
    "                }\n"
    "                else if (data.includes(\"start-btn=0\")) {\n"
    "                    let index = data.indexOf('m');\n"
    "                    let index2 = data.lastIndexOf('s');\n"
    "                    document.getElementById(\"start-btn\").innerHTML = \"Start\";\n"
    "                    states.set(\"start-btn\", false);\n"
    "                    document.getElementById(\"time_min\").value = (data.substring(index + 1, "
    "index2)).toString();\n"
    "                    document.getElementById(\"time_sec\").value = (data.substring(index2 + 1)).toString();\n"
    "\n"
    "                    if (states.get(\"mode-btn\") == false) {\n"
    "                        mode_state.set(\"timer\", false);\n"
    "                    }\n"
    "                    else {\n"
    "                        mode_state.set(\"stopwatch\", false);\n"
    "                    }\n"
    "                }\n"
    "                else if (data == \"start-btn=1\") {\n"
    "                    document.getElementById(\"start-btn\").innerHTML = \"Pause\";\n"
    "                    states.set(\"start-btn\", true);\n"
    "\n"
    "\n"
    "                    if (states.get(\"mode-btn\") == false) {\n"
    "                        mode_state.set(\"timer\", true);\n"
    "                    }\n"
    "                    else {\n"
    "                        mode_state.set(\"stopwatch\", true);\n"
    "                    }\n"
    "                }\n"
    "                else if (data == \"reset-btn=0\") {\n"
    "                    document.getElementById(\"time_min\").value = \"00\";\n"
    "                    document.getElementById(\"time_sec\").value = \"00\";\n"
    "                }\n"
    "                else if (data == \"toggle1=0\") {\n"
    "                    document.getElementById(\"led1-status\").innerHTML = \"OFF\";\n"
    "                    states.set(\"toggle1\", false);\n"
    "                }\n"
    "                else if (data == \"toggle1=1\") {\n"
    "                    document.getElementById(\"led1-status\").innerHTML = \"ON\";\n"
    "                    states.set(\"toggle1\", true);\n"
    "                }\n"
    "                else if (data == \"toggle2=0\") {\n"
    "                    document.getElementById(\"led2-status\").innerHTML = \"OFF\";\n"
    "                    states.set(\"toggle2\", false);\n"
    "                }\n"
    "                else if (data == \"toggle2=1\") {\n"
    "                    document.getElementById(\"led2-status\").innerHTML = \"ON\";\n"
    "                    states.set(\"toggle2\", true);\n"
    "                }\n"
    "                else if (data == \"display-btn=0\") {\n"
    "                    alert(\"Displaying message...\");\n"
    "                }\n"
    "                else if (data == \"light-btn1=0\") {\n"
    "                    alert(\"light 1 changed\")\n"
    "                }\n"
    "                else if (data == \"light-btn2=0\") {\n"
    "                    alert(\"light 2 changed\")\n"
    "                }\n"
    "                else if (data == \"buzz-btn=1\") {\n"
    "                    alert(\"buzzing...\");\n"
    "                    states.set(\"buzz\", true);\n"
    "                    document.getElementById(\"buzzer\").style.backgroundImage = "
    "\"url(https://media.istockphoto.com/id/1699372906/photo/"
    "red-electric-megaphone-on-red-background-stock-photo.webp?b=1&s=170667a&w=0&k=20&c="
    "HPvUNy8ZSlQ7FQFxDh4NDDJdaiMC3WzmEzqtAmiNZHo=)\";\n"
    "                    document.getElementById(\"buzzer\").style.borderRadius = \"20px\";\n"
    "                }\n"
    "                else if (data == \"buzz-btn=0\") {\n"
    "                    document.getElementById(\"buzzer\").style.backgroundImage = '';\n"
    "                    states.set(\"buzz\", false);\n"
    "                }\n"
    "                else {\n"
    "                    console.log(data);\n"
    "                    alert(data);\n"
    "                }\n"
    "\n"
    "            }\n"
    "        }\n"
    "        const request = (requestID) => {\n"
    "            const xhttp = new XMLHttpRequest();\n"
    "            xhttp.open(\"GET\", \"STM32F1?\" + requestID + \"REQUEST_END\");\n"
    "            xhttp.send();\n"
    "            xhttp.onreadystatechange = function () {\n"
    "                if (this.readyState === 4 && this.status === 200) {\n"
    "                    data = this.responseText.toString();\n"
    "                    callback(null, data);\n"
    "                }\n"
    "                else if (this.readyState === 4) {\n"
    "                    callback(requestID + \" : No response.\", undefined);\n"
    "                }\n"
    "            }\n"
    "        }\n"
    "\n"
    "        function myfunc(id) {\n"
    "            if (id == \"light-btn1\" || id == \"light-btn2\" || id == \"display-btn\") {\n"
    "                if (id == \"light-btn1\") {\n"
    "                    color = document.getElementById(\"color1\").value;\n"
    "                    const r = parseInt(color.substr(1, 2), 16)\n"
    "                    const g = parseInt(color.substr(3, 2), 16)\n"
    "                    const b = parseInt(color.substr(5, 2), 16)\n"
    "                    request(id + \"=\" + \"g:\" + String(g) + \"r:\" + String(r) + \"b:\" + String(b))\n"
    "                }\n"
    "                else if (id == \"light-btn2\") {\n"
    "                    color = document.getElementById(\"color2\").value;\n"
    "                    const r = parseInt(color.substr(1, 2), 16)\n"
    "                    const g = parseInt(color.substr(3, 2), 16)\n"
    "                    const b = parseInt(color.substr(5, 2), 16)\n"
    "                    request(id + \"=\" + \"g:\" + String(g) + \"r:\" + String(r) + \"b:\" + String(b))\n"
    "                }\n"
    "                else if (id == \"display-btn\") {\n"
    "                    obj = document.getElementById(\"lcd-text\");\n"
    "                    let str = obj.value;\n"
    "                    request(id + \"=\" + obj.value);\n"
    "                }\n"
    "            }\n"
    "            else if (id == \"start-btn\") {\n"
    "                if (states.get(\"start-btn\") == false) {\n"
    "                    min = document.getElementById(\"time_min\").value;\n"
    "                    sec = document.getElementById(\"time_sec\").value;\n"
    "                    request(id + \"=\" + \"min:\" + min + \"sec:\" + sec);\n"
    "                }\n"
    "                else {\n"
    "                    request(id + \"=0\");\n"
    "                }\n"
    "            }\n"
    "            else if (states.get(id)) {\n"
    "                request(id + \"=0\");\n"
    "            }\n"
    "            else {\n"
    "                request(id + \"=1\");\n"
    "            }\n"
    "\n"
    "        }\n"
    "\n"
    "\n"
    "        function lcd_clear() {\n"
    "            document.getElementById(\"lcd-text\").value = \"\";\n"
    "        }\n"
    "\n"
    "    </script>\n"
    "</body>\n"
    "\n"
    "</html>";
#endif